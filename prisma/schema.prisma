// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  uuid       String      @id @db.Uuid
  name       String
  foundPosts FoundPost[]
  lostPosts  LostPost[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

enum ItemCategory {
  ELECTRONICS
  CARD
  CLOTHING
  BAG
  WALLET
  ACCESSORIES
  DOCUMENT
  OTHER
}

enum PostStatus {
  PENDING
  RESOLVED
}

// 추가 features가 있을 수 있어서 Found와 Lost를 분리함
// 발견 게시글
model FoundPost {
  id          String       @id @default(uuid()) @db.Uuid
  title       String
  description String
  images      String[] // image url list
  location    String
  category    ItemCategory
  status      PostStatus   @default(PENDING)
  author      User         @relation(fields: [authorId], references: [uuid])
  authorId    String       @db.Uuid
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@index([authorId])
}

// 분실 게시글
model LostPost {
  id          String       @id @default(uuid()) @db.Uuid
  title       String
  description String
  images      String[] // image url list
  location    String
  category    ItemCategory
  status      PostStatus   @default(PENDING)
  author      User         @relation(fields: [authorId], references: [uuid])
  authorId    String       @db.Uuid
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@index([authorId])
}
